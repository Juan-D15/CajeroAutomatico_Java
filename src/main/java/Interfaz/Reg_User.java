package Interfaz;

import control.actividades.RegistroActividades;
import java.awt.Color;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import modelo.beans.Usuario;
import modelo.logic.UsuarioLogic;

/**
 *
 * @author Juan Diaz
 */
public class Reg_User extends javax.swing.JPanel {

    /**
     * Creates new form Reg_User
     */
    private Usuario usuarioOriginal;

    public Reg_User() {
        initComponents();
        initListeners();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbTitulo = new javax.swing.JLabel();
        lbSTitulo = new javax.swing.JLabel();
        txtNombreUser = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        lbSTitulo1 = new javax.swing.JLabel();
        txtNumTarjeta = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        lbSTitulo2 = new javax.swing.JLabel();
        txtPinUser = new javax.swing.JPasswordField();
        jSeparator3 = new javax.swing.JSeparator();
        lbSTitulo3 = new javax.swing.JLabel();
        txtSaldoUser = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        lbSTitulo4 = new javax.swing.JLabel();
        txtMontoUser = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        btnEliminarUser = new javax.swing.JButton();
        btnRegistrarUser = new javax.swing.JButton();
        btnModificarUser = new javax.swing.JButton();
        btnBuscarUsuario = new javax.swing.JButton();
        lbSTitulo5 = new javax.swing.JLabel();
        txtNumCuenta = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(640, 540));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbTitulo.setFont(new java.awt.Font("Poppins Medium", 0, 24)); // NOI18N
        lbTitulo.setText("Usuarios");
        add(lbTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, -1, -1));

        lbSTitulo.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        lbSTitulo.setForeground(new java.awt.Color(153, 153, 153));
        lbSTitulo.setText("Usuario");
        add(lbSTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, -1, -1));

        txtNombreUser.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txtNombreUser.setForeground(new java.awt.Color(0, 8, 66));
        txtNombreUser.setText("Nombre de Usuario");
        txtNombreUser.setBorder(null);
        txtNombreUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreUserKeyTyped(evt);
            }
        });
        add(txtNombreUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 490, 30));

        jSeparator1.setBackground(new java.awt.Color(0, 8, 66));
        jSeparator1.setForeground(new java.awt.Color(0, 8, 66));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 490, 10));

        lbSTitulo1.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        lbSTitulo1.setForeground(new java.awt.Color(153, 153, 153));
        lbSTitulo1.setText("No. Tarjeta");
        add(lbSTitulo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 210, -1, -1));

        txtNumTarjeta.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txtNumTarjeta.setForeground(new java.awt.Color(0, 8, 66));
        txtNumTarjeta.setText("Número de Tarjeta");
        txtNumTarjeta.setBorder(null);
        txtNumTarjeta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumTarjetaKeyTyped(evt);
            }
        });
        add(txtNumTarjeta, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 230, 480, 30));

        jSeparator2.setBackground(new java.awt.Color(0, 8, 66));
        jSeparator2.setForeground(new java.awt.Color(0, 8, 66));
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, 490, 10));

        lbSTitulo2.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        lbSTitulo2.setForeground(new java.awt.Color(153, 153, 153));
        lbSTitulo2.setText("PIN");
        add(lbSTitulo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 280, -1, -1));

        txtPinUser.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txtPinUser.setForeground(new java.awt.Color(0, 8, 66));
        txtPinUser.setText("**********");
        txtPinUser.setBorder(null);
        txtPinUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPinUserKeyTyped(evt);
            }
        });
        add(txtPinUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, 490, -1));

        jSeparator3.setBackground(new java.awt.Color(0, 8, 66));
        jSeparator3.setForeground(new java.awt.Color(0, 8, 66));
        add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 330, 490, 10));

        lbSTitulo3.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        lbSTitulo3.setForeground(new java.awt.Color(153, 153, 153));
        lbSTitulo3.setText("Saldo");
        add(lbSTitulo3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 350, -1, -1));

        txtSaldoUser.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txtSaldoUser.setForeground(new java.awt.Color(0, 8, 66));
        txtSaldoUser.setText("Saldo Actual");
        txtSaldoUser.setBorder(null);
        txtSaldoUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSaldoUserKeyTyped(evt);
            }
        });
        add(txtSaldoUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 370, 490, 30));

        jSeparator4.setBackground(new java.awt.Color(0, 8, 66));
        jSeparator4.setForeground(new java.awt.Color(0, 8, 66));
        add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 400, 490, 10));

        lbSTitulo4.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        lbSTitulo4.setForeground(new java.awt.Color(153, 153, 153));
        lbSTitulo4.setText("Monto Máximo");
        add(lbSTitulo4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 420, -1, -1));

        txtMontoUser.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txtMontoUser.setForeground(new java.awt.Color(0, 8, 66));
        txtMontoUser.setText("Monto Máximo Diario");
        txtMontoUser.setBorder(null);
        txtMontoUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMontoUserKeyTyped(evt);
            }
        });
        add(txtMontoUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 440, 490, 30));

        jSeparator5.setBackground(new java.awt.Color(0, 8, 66));
        jSeparator5.setForeground(new java.awt.Color(0, 8, 66));
        add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 470, 490, 10));

        btnEliminarUser.setBackground(new java.awt.Color(12, 33, 193));
        btnEliminarUser.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        btnEliminarUser.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminarUser.setText("Eliminar");
        btnEliminarUser.setBorderPainted(false);
        btnEliminarUser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminarUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarUserActionPerformed(evt);
            }
        });
        add(btnEliminarUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 490, 130, 30));

        btnRegistrarUser.setBackground(new java.awt.Color(12, 33, 193));
        btnRegistrarUser.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        btnRegistrarUser.setForeground(new java.awt.Color(255, 255, 255));
        btnRegistrarUser.setText("Registrar");
        btnRegistrarUser.setBorderPainted(false);
        btnRegistrarUser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegistrarUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarUserActionPerformed(evt);
            }
        });
        add(btnRegistrarUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, 130, 30));

        btnModificarUser.setBackground(new java.awt.Color(12, 33, 193));
        btnModificarUser.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        btnModificarUser.setForeground(new java.awt.Color(255, 255, 255));
        btnModificarUser.setText("Modificar");
        btnModificarUser.setBorderPainted(false);
        btnModificarUser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModificarUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarUserActionPerformed(evt);
            }
        });
        add(btnModificarUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 490, 130, 30));

        btnBuscarUsuario.setBackground(new java.awt.Color(12, 33, 193));
        btnBuscarUsuario.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        btnBuscarUsuario.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscarUsuario.setText("Buscar");
        btnBuscarUsuario.setBorderPainted(false);
        btnBuscarUsuario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarUsuarioActionPerformed(evt);
            }
        });
        add(btnBuscarUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 490, 130, 30));

        lbSTitulo5.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        lbSTitulo5.setForeground(new java.awt.Color(153, 153, 153));
        lbSTitulo5.setText("No. Cuenta");
        add(lbSTitulo5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, -1, -1));

        txtNumCuenta.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txtNumCuenta.setForeground(new java.awt.Color(0, 8, 66));
        txtNumCuenta.setText("Número de Cuenta");
        txtNumCuenta.setBorder(null);
        txtNumCuenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumCuentaKeyTyped(evt);
            }
        });
        add(txtNumCuenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, 490, 30));

        jSeparator6.setBackground(new java.awt.Color(0, 8, 66));
        jSeparator6.setForeground(new java.awt.Color(0, 8, 66));
        add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, 490, 10));
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarUserActionPerformed
        eliminarUsuario();
    }//GEN-LAST:event_btnEliminarUserActionPerformed

    private void btnRegistrarUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarUserActionPerformed
        registrarUsuario();
    }//GEN-LAST:event_btnRegistrarUserActionPerformed

    private void btnModificarUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarUserActionPerformed
        if (usuarioOriginal != null) {
            modificarUsuario(usuarioOriginal);
        }
    }//GEN-LAST:event_btnModificarUserActionPerformed

    private void btnBuscarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarUsuarioActionPerformed
        usuarioOriginal = buscarUsuario();
    }//GEN-LAST:event_btnBuscarUsuarioActionPerformed

    private void txtNombreUserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreUserKeyTyped
        // Condicionar jTextField solo para letras
        if (!(Character.isLetter(evt.getKeyChar())) && !(evt.getKeyChar() == KeyEvent.VK_SPACE)) {
            evt.consume();
        }
        if (txtNombreUser.getText().length() == 50) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNombreUserKeyTyped

    private void txtNumCuentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumCuentaKeyTyped
        // Condicionar el jTextField para números
        int key = evt.getKeyChar();
        boolean numero = key >= 48 && key <= 57; //ASCII
        if (!numero) {
            evt.consume();
        }

        if (txtNumCuenta.getText().trim().length() == 10) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNumCuentaKeyTyped

    private void txtNumTarjetaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumTarjetaKeyTyped
        // Condicionar el jTextField para números
        int key = evt.getKeyChar();
        boolean numero = key >= 48 && key <= 57; //ASCII
        if (!numero) {
            evt.consume();
        }

        if (txtNumTarjeta.getText().trim().length() == 16) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNumTarjetaKeyTyped

    private void txtPinUserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPinUserKeyTyped
        // Condicionar el jTextField para números
        int key = evt.getKeyChar();
        boolean numero = key >= 48 && key <= 57; //ASCII
        if (!numero) {
            evt.consume();
        }

        if (String.valueOf(txtPinUser.getPassword()).trim().length() == 4) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPinUserKeyTyped

    private void txtSaldoUserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSaldoUserKeyTyped
        // Condicionar el jTextField para números
        int key = evt.getKeyChar();
        boolean numero = key >= 48 && key <= 57; //ASCII
        if (!numero) {
            evt.consume();
        }
    }//GEN-LAST:event_txtSaldoUserKeyTyped

    private void txtMontoUserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMontoUserKeyTyped
        // Condicionar el jTextField para números
        int key = evt.getKeyChar();
        boolean numero = key >= 48 && key <= 57; //ASCII
        if (!numero) {
            evt.consume();
        }
    }//GEN-LAST:event_txtMontoUserKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarUsuario;
    private javax.swing.JButton btnEliminarUser;
    private javax.swing.JButton btnModificarUser;
    private javax.swing.JButton btnRegistrarUser;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JLabel lbSTitulo;
    private javax.swing.JLabel lbSTitulo1;
    private javax.swing.JLabel lbSTitulo2;
    private javax.swing.JLabel lbSTitulo3;
    private javax.swing.JLabel lbSTitulo4;
    private javax.swing.JLabel lbSTitulo5;
    private javax.swing.JLabel lbTitulo;
    private javax.swing.JTextField txtMontoUser;
    private javax.swing.JTextField txtNombreUser;
    private javax.swing.JTextField txtNumCuenta;
    private javax.swing.JTextField txtNumTarjeta;
    private javax.swing.JPasswordField txtPinUser;
    private javax.swing.JTextField txtSaldoUser;
    // End of variables declaration//GEN-END:variables

    private void modificarUsuario(Usuario usuario) {
        if (!txtNombreUser.getText().isEmpty()
                && !txtNumCuenta.getText().isEmpty()
                && !txtNumTarjeta.getText().isEmpty()
                && !String.valueOf(txtPinUser.getPassword()).isEmpty()
                && !txtSaldoUser.getText().isEmpty()
                && !txtMontoUser.getText().isEmpty()) {

            String nombre = txtNombreUser.getText();
            String numCuenta = txtNumCuenta.getText();
            String numTarjeta = txtNumTarjeta.getText(); // Este es el nuevo número de tarjeta que se ingresa
            String pin = String.valueOf(txtPinUser.getPassword());
            String saldo = txtSaldoUser.getText();
            String monto = txtMontoUser.getText();

            // Crear un objeto Usuario con los nuevos datos
            Usuario usuarioModificado = new Usuario(nombre, numCuenta, numTarjeta, pin, saldo, monto);

            // Llamar al método modificar, pasando el número de tarjeta original
            if (UsuarioLogic.modificar(usuarioModificado, usuario.getNumTarjeta())) {
                JOptionPane.showMessageDialog(null, "Usuario Modificado");
                txtMontoUser.setText("");
                txtNombreUser.setText("");
                txtNumTarjeta.setText("");
                txtNumCuenta.setText("");
                txtPinUser.setText("");
                txtSaldoUser.setText("");
                Usuario obtener = UsuarioLogic.obtener(usuarioModificado.getNumTarjeta());
                String Fecha_Hora = UsuarioLogic.registrarAcceso(obtener);
                RegistroActividades.registrarActividadAdministrador("Se Modifico un Usuario: "
                        + "Nombre: " + obtener.getNombre()
                        + " Número de Cuenta: " + obtener.getNumCuenta()
                        + " Número de Tarjeta: " + obtener.getNumTarjeta()
                        + " PIN: " + obtener.getPIN()
                        + " Saldo: " + obtener.getSaldo()
                        + " Monto: " + obtener.getMonto()
                        + " Fecha y Hora: " + Fecha_Hora);
            } else {
                JOptionPane.showMessageDialog(null, "El Usuario no existe");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Por favor, rellene todos los campos.");
        }
    }

    private Usuario buscarUsuario() {
        if (!txtNumTarjeta.getText().isEmpty()) {
            Usuario usuario = UsuarioLogic.obtener(txtNumTarjeta.getText());
            if (usuario != null) {
                txtNombreUser.setText("");
                txtNombreUser.setText(usuario.getNombre());
                txtNumCuenta.setText("");
                txtNumCuenta.setText(usuario.getNumCuenta());
                txtPinUser.setText("");
                txtPinUser.setText(usuario.getPIN());
                txtSaldoUser.setText("");
                txtSaldoUser.setText(usuario.getSaldo());
                txtMontoUser.setText("");
                txtMontoUser.setText(usuario.getMonto());
                Usuario obtener = UsuarioLogic.obtener(txtNumTarjeta.getText());
                String Fecha_Hora = UsuarioLogic.registrarAcceso(obtener);
                RegistroActividades.registrarActividadAdministrador("Se Buscó un Usuario: "
                        + "Nombre: " + obtener.getNombre()
                        + " Número de Cuenta: " + obtener.getNumCuenta()
                        + " Número de Tarjeta: " + obtener.getNumTarjeta()
                        + " PIN: " + obtener.getPIN()
                        + " Saldo: " + obtener.getSaldo()
                        + " Monto: " + obtener.getMonto()
                        + " Fecha y Hora: " + Fecha_Hora);
                return usuario;
            } else {
                JOptionPane.showMessageDialog(null, "El Usuario no existe");
                return null;
            }
        }
        return null;
    }

    private void eliminarUsuario() {
        if (!txtNumTarjeta.getText().isEmpty()) {
            Usuario obtener = UsuarioLogic.obtener(txtNumTarjeta.getText());
            String Fecha_Hora = UsuarioLogic.registrarAcceso(obtener);
            RegistroActividades.registrarActividadAdministrador("Se Eliminó un Usuario: "
                    + "Nombre: " + obtener.getNombre()
                    + " Número de Cuenta: " + obtener.getNumCuenta()
                    + " Número de Tarjeta: " + obtener.getNumTarjeta()
                    + " PIN: " + obtener.getPIN()
                    + " Saldo: " + obtener.getSaldo()
                    + " Monto: " + obtener.getMonto()
                    + " Fecha y Hora: " + Fecha_Hora);
            if (UsuarioLogic.eliminar(txtNumTarjeta.getText())) {
                JOptionPane.showMessageDialog(null, "Usuario Eliminado");
                txtMontoUser.setText("");
                txtNombreUser.setText("");
                txtNumTarjeta.setText("");
                txtNumCuenta.setText("");
                txtPinUser.setText("");
                txtSaldoUser.setText("");
            } else {
                JOptionPane.showMessageDialog(null, "El Usuario no existe");
            }
        }
    }

    private void registrarUsuario() {
        if (!txtNombreUser.getText().isEmpty()
                && !txtNumCuenta.getText().isEmpty()
                && !txtNumTarjeta.getText().isEmpty()
                && !String.valueOf(txtPinUser.getPassword()).isEmpty()
                && !txtSaldoUser.getText().isEmpty()
                && !txtMontoUser.getText().isEmpty()) {

            String nombre = txtNombreUser.getText();
            String numCuenta = txtNumCuenta.getText();
            String numTarjeta = txtNumTarjeta.getText();
            String pin = String.valueOf(txtPinUser.getPassword());
            String saldo = txtSaldoUser.getText();
            String monto = txtMontoUser.getText();

            Usuario usuario = new Usuario(nombre, numCuenta, numTarjeta, pin, saldo, monto);
            if (UsuarioLogic.insertar(usuario)) {
                JOptionPane.showMessageDialog(null, "Usuario Registrado");
                String Fecha_Hora = UsuarioLogic.registrarAcceso(usuario);
                RegistroActividades.registrarActividadAdministrador("Se Registro un Usuario: "
                        + "Nombre: " + nombre
                        + " Número de Cuenta: " + numCuenta
                        + " Número de Tarjeta: " + numTarjeta
                        + " PIN: " + pin
                        + " Saldo: " + saldo
                        + " Monto: " + monto
                        + " Fecha y Hora: " + Fecha_Hora);
                txtMontoUser.setText("");
                txtNombreUser.setText("");
                txtNumTarjeta.setText("");
                txtNumCuenta.setText("");
                txtPinUser.setText("");
                txtSaldoUser.setText("");
            } else {
                JOptionPane.showMessageDialog(null, "Usuario ya existente");
            }
        }
    }

    private void initListeners() {
        txtNombreUser.addFocusListener(new FocusAdapter() {
            public void focusGained(FocusEvent evt) {
                if (txtNombreUser.getText().equals("Nombre de Usuario")) {
                    txtNombreUser.setText("");
                    txtNombreUser.setForeground(new Color(0, 8, 66));
                }
            }

            public void focusLost(FocusEvent evt) {
                if (txtNombreUser.getText().isEmpty()) {
                    txtNombreUser.setText("Nombre de Usuario");
                    txtNombreUser.setForeground(new Color(0, 8, 66));
                }
            }
        });

        txtNumTarjeta.addFocusListener(new FocusAdapter() {
            public void focusGained(FocusEvent evt) {
                if (txtNumTarjeta.getText().equals("Número de Tarjeta")) {
                    txtNumTarjeta.setText("");
                    txtNumTarjeta.setForeground(new Color(0, 8, 66));
                }
            }

            public void focusLost(FocusEvent evt) {
                if (txtNumTarjeta.getText().isEmpty()) {
                    txtNumTarjeta.setText("Número de Tarjeta");
                    txtNumTarjeta.setForeground(new Color(0, 8, 66));
                }
            }
        });
        txtNumCuenta.addFocusListener(new FocusAdapter() {
            public void focusGained(FocusEvent evt) {
                if (txtNumCuenta.getText().equals("Número de Cuenta")) {
                    txtNumCuenta.setText("");
                    txtNumCuenta.setForeground(new Color(0, 8, 66));
                }
            }

            public void focusLost(FocusEvent evt) {
                if (txtNumCuenta.getText().isEmpty()) {
                    txtNumCuenta.setText("Número de Cuenta");
                    txtNumCuenta.setForeground(new Color(0, 8, 66));
                }
            }
        });
        txtPinUser.addFocusListener(new FocusAdapter() {
            public void focusGained(FocusEvent evt) {
                if (String.valueOf(txtPinUser.getPassword()).equals("**********")) {
                    txtPinUser.setText("");
                    txtPinUser.setForeground(new Color(0, 8, 66));
                }
            }

            public void focusLost(FocusEvent evt) {
                if (String.valueOf(txtPinUser.getPassword()).isEmpty()) {
                    txtPinUser.setText("**********");
                    txtPinUser.setForeground(new Color(0, 8, 66));
                }
            }
        });

        txtSaldoUser.addFocusListener(new FocusAdapter() {
            public void focusGained(FocusEvent evt) {
                if (txtSaldoUser.getText().equals("Saldo Actual")) {
                    txtSaldoUser.setText("");
                    txtSaldoUser.setForeground(new Color(0, 8, 66));
                }
            }

            public void focusLost(FocusEvent evt) {
                if (txtSaldoUser.getText().isEmpty()) {
                    txtSaldoUser.setText("Saldo Actual");
                    txtSaldoUser.setForeground(new Color(0, 8, 66));
                }
            }
        });

        txtMontoUser.addFocusListener(new FocusAdapter() {
            public void focusGained(FocusEvent evt) {
                if (txtMontoUser.getText().equals("Monto Máximo Diario")) {
                    txtMontoUser.setText("");
                    txtMontoUser.setForeground(new Color(0, 8, 66));
                }
            }

            public void focusLost(FocusEvent evt) {
                if (txtMontoUser.getText().isEmpty()) {
                    txtMontoUser.setText("Monto Máximo Diario");
                    txtMontoUser.setForeground(new Color(0, 8, 66));
                }
            }
        });
    }
}
