package Interfaz;

import cajero.modelo.Cajero;
import java.awt.Color;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import javax.swing.JOptionPane;
import modelo.logic.UsuarioLogic;

/**
 *
 * @author Juan Diaz
 */
public class Retiros_User extends javax.swing.JPanel {

    /**
     * Creates new form Retiros_User
     */
    private Cajero cajero;

    public Retiros_User() {
        cajero = Cajero.getInstancia();  // Usar la instancia actual
        initComponents();
        initListeners();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRetirar = new javax.swing.JButton();
        lbSTitulo = new javax.swing.JLabel();
        txtNumTarjeta = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        lbTitulo = new javax.swing.JLabel();
        lbSTitulo2 = new javax.swing.JLabel();
        txtPinUser = new javax.swing.JPasswordField();
        jSeparator3 = new javax.swing.JSeparator();
        lbSTitulo3 = new javax.swing.JLabel();
        txtDineroRetirar = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(640, 480));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnRetirar.setBackground(new java.awt.Color(12, 33, 193));
        btnRetirar.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        btnRetirar.setForeground(new java.awt.Color(255, 255, 255));
        btnRetirar.setText("Retirar");
        btnRetirar.setBorderPainted(false);
        btnRetirar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRetirar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetirarActionPerformed(evt);
            }
        });
        add(btnRetirar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 370, 130, 30));

        lbSTitulo.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        lbSTitulo.setForeground(new java.awt.Color(153, 153, 153));
        lbSTitulo.setText("No. Tarjeta");
        add(lbSTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, -1, -1));

        txtNumTarjeta.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txtNumTarjeta.setForeground(new java.awt.Color(0, 8, 66));
        txtNumTarjeta.setText("Número de Tarjeta");
        txtNumTarjeta.setBorder(null);
        txtNumTarjeta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumTarjetaKeyTyped(evt);
            }
        });
        add(txtNumTarjeta, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, 490, 30));

        jSeparator1.setBackground(new java.awt.Color(0, 8, 66));
        jSeparator1.setForeground(new java.awt.Color(0, 8, 66));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 160, 490, 10));

        lbTitulo.setFont(new java.awt.Font("Poppins Medium", 0, 24)); // NOI18N
        lbTitulo.setText("Retiros");
        add(lbTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, -1, -1));

        lbSTitulo2.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        lbSTitulo2.setForeground(new java.awt.Color(153, 153, 153));
        lbSTitulo2.setText("PIN");
        add(lbSTitulo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 180, -1, -1));

        txtPinUser.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txtPinUser.setForeground(new java.awt.Color(0, 8, 66));
        txtPinUser.setText("****");
        txtPinUser.setBorder(null);
        txtPinUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPinUserKeyTyped(evt);
            }
        });
        add(txtPinUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, 490, -1));

        jSeparator3.setBackground(new java.awt.Color(0, 8, 66));
        jSeparator3.setForeground(new java.awt.Color(0, 8, 66));
        add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, 490, 10));

        lbSTitulo3.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        lbSTitulo3.setForeground(new java.awt.Color(153, 153, 153));
        lbSTitulo3.setText("Retirar");
        add(lbSTitulo3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 250, -1, -1));

        txtDineroRetirar.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txtDineroRetirar.setForeground(new java.awt.Color(0, 8, 66));
        txtDineroRetirar.setText("Retirar");
        txtDineroRetirar.setBorder(null);
        txtDineroRetirar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDineroRetirarKeyTyped(evt);
            }
        });
        add(txtDineroRetirar, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, 490, 30));

        jSeparator4.setBackground(new java.awt.Color(0, 8, 66));
        jSeparator4.setForeground(new java.awt.Color(0, 8, 66));
        add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, 490, 10));
    }// </editor-fold>//GEN-END:initComponents

    private void btnRetirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetirarActionPerformed
        retirarUsuario();
        cajero.mostrarTotal();
    }//GEN-LAST:event_btnRetirarActionPerformed

    private void txtNumTarjetaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumTarjetaKeyTyped
        // Condicionar el jTextField para números
        int key = evt.getKeyChar();
        boolean numero = key >= 48 && key <= 57; //ASCII
        if (!numero) {
            evt.consume();
        }

        if (txtNumTarjeta.getText().trim().length() == 16) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNumTarjetaKeyTyped

    private void txtDineroRetirarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDineroRetirarKeyTyped
        // Condicionar el jTextField para números
        int key = evt.getKeyChar();
        boolean numero = key >= 48 && key <= 57; //ASCII
        if (!numero) {
            evt.consume();
        }
    }//GEN-LAST:event_txtDineroRetirarKeyTyped

    private void txtPinUserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPinUserKeyTyped
        // Condicionar el jTextField para números
        int key = evt.getKeyChar();
        boolean numero = key >= 48 && key <= 57; //ASCII
        if (!numero) {
            evt.consume();
        }

        if (String.valueOf(txtPinUser.getPassword()).trim().length() == 4) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPinUserKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRetirar;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel lbSTitulo;
    private javax.swing.JLabel lbSTitulo2;
    private javax.swing.JLabel lbSTitulo3;
    private javax.swing.JLabel lbTitulo;
    private javax.swing.JTextField txtDineroRetirar;
    private javax.swing.JTextField txtNumTarjeta;
    private javax.swing.JPasswordField txtPinUser;
    // End of variables declaration//GEN-END:variables

    private void retirarUsuario() {
        // Obtener los valores de los campos de texto
        String numTarjeta = txtNumTarjeta.getText();
        String pin = new String(txtPinUser.getPassword());
        try {
            int cantidad = Integer.parseInt(txtDineroRetirar.getText());

            // Llamar al método retirar
            boolean exito = UsuarioLogic.retirar(numTarjeta, pin, cantidad, cajero);

            if (exito) {
                JOptionPane.showMessageDialog(this, "Retiro realizado con éxito.");
            } else {
                JOptionPane.showMessageDialog(this, "Error en el retiro. Verifique los datos o saldo insuficiente.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese un valor válido para la cantidad.");
        }
    }

    private void initListeners() {
        txtNumTarjeta.addFocusListener(new FocusAdapter() {
            public void focusGained(FocusEvent evt) {
                if (txtNumTarjeta.getText().equals("Número de Tarjeta")) {
                    txtNumTarjeta.setText("");
                    txtNumTarjeta.setForeground(new Color(0, 8, 66));
                }
            }

            public void focusLost(FocusEvent evt) {
                if (txtNumTarjeta.getText().isEmpty()) {
                    txtNumTarjeta.setText("Número de Tarjeta");
                    txtNumTarjeta.setForeground(new Color(0, 8, 66));
                }
            }
        });

        txtPinUser.addFocusListener(new FocusAdapter() {
            public void focusGained(FocusEvent evt) {
                if (String.valueOf(txtPinUser.getPassword()).equals("****")) {
                    txtPinUser.setText("");
                    txtPinUser.setForeground(new Color(0, 8, 66));
                }
            }

            public void focusLost(FocusEvent evt) {
                if (String.valueOf(txtPinUser.getPassword()).isEmpty()) {
                    txtPinUser.setText("****");
                    txtPinUser.setForeground(new Color(0, 8, 66));
                }
            }
        });

        txtDineroRetirar.addFocusListener(new FocusAdapter() {
            public void focusGained(FocusEvent evt) {
                if (txtDineroRetirar.getText().equals("Retirar")) {
                    txtDineroRetirar.setText("");
                    txtDineroRetirar.setForeground(new Color(0, 8, 66));
                }
            }

            public void focusLost(FocusEvent evt) {
                if (txtDineroRetirar.getText().isEmpty()) {
                    txtDineroRetirar.setText("Retirar");
                    txtDineroRetirar.setForeground(new Color(0, 8, 66));
                }
            }
        });
    }
}
